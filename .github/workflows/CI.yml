---
name: CI

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]
  push:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup_release:
    name: Setup Release
    outputs:
      changelog_changes: ${{ steps.setup_release.outputs.changelog_changes }}
      changelog_date: ${{ steps.setup_release.outputs.changelog_date }}
      changelog_exists: ${{ steps.setup_release.outputs.changelog_exists }}
      changelog_release_exists: ${{ steps.setup_release.outputs.changelog_release_exists }}
      changelog_url: ${{ steps.setup_release.outputs.changelog_url }}
      changelog_version: ${{ steps.setup_release.outputs.changelog_version }}
      publish_pre_release: ${{ steps.setup_release.outputs.publish_pre_release }}
      publish_release: ${{ steps.setup_release.outputs.publish_release }}
      publish_stable_release: ${{ steps.setup_release.outputs.publish_stable_release }}
      release_body: ${{ steps.setup_release.outputs.release_body }}
      release_build: ${{ steps.setup_release.outputs.release_build }}
      release_commit: ${{ steps.setup_release.outputs.release_commit }}
      release_generate_release_notes: ${{ steps.setup_release.outputs.release_generate_release_notes }}
      release_tag: ${{ steps.setup_release.outputs.release_tag }}
      release_version: ${{ steps.setup_release.outputs.release_version }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Release
        id: setup_release
        uses: LizardByte/setup-release-action@v2023.1207.150459
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs:
      - setup_release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-20.04, macos-11]
        architecture: [x64]
        include:  # additional runs
          - os: windows-2019
            architecture: x86

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          architecture: ${{ matrix.architecture }}

      - name: Set up Python Dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install -r requirements-dev.txt --no-warn-script-location

      - name: Compile Locale Translations
        run: |
          python ./scripts/_locale.py --compile

      - name: Install npm packages
        shell: bash
        run: |
          # install node_modules
          npm install

          # move node_modules directory to web directory
          mv -f ./node_modules/ ./web/

      - name: Compile Docs
        working-directory: docs
        run: |
          make html

      - name: Build pyinstaller package
        run: |
          python ./scripts/build.py

      - name: Package Release
        run: |
          7z a "./RetroArcher_${{ runner.os }}_${{ matrix.architecture }}.zip" "dist"

          mkdir artifacts
          mv "./RetroArcher_${{ runner.os }}_${{ matrix.architecture }}.zip" ./artifacts/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3  # https://github.com/actions/upload-artifact
        with:
          name: RetroArcher_${{ runner.os }}_${{ matrix.architecture }}
          if-no-files-found: error  # 'warn' or 'ignore' are also available, defaults to `warn`
          path: |
            ${{ github.workspace }}/artifacts

      - name: Create/Update GitHub Release
        if: ${{ needs.setup_release.outputs.publish_release == 'true' }}
        uses: LizardByte/create-release-action@v2023.1128.2625
        with:
          allowUpdates: true
          body: ''
          discussionCategory: announcements
          generateReleaseNotes: true
          name: ${{ needs.setup_release.outputs.release_tag }}
          # use pre-release for now
          prerelease: true  # ${{ needs.setup_release.outputs.publish_pre_release }}
          tag: ${{ needs.setup_release.outputs.release_tag }}
          token: ${{ secrets.GH_BOT_TOKEN }}
