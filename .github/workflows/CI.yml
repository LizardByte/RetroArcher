---
name: CI

on:
  pull_request:
    branches: [master, nightly]
    types: [opened, synchronize, reopened]
  push:
    branches: [master, nightly]
  workflow_dispatch:

jobs:
  check_changelog:
    name: Check Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        if: ${{ github.ref == 'refs/heads/master' || github.base_ref == 'master' }}
        uses: actions/checkout@v4

      - name: Verify Changelog
        id: verify_changelog
        if: ${{ github.ref == 'refs/heads/master' || github.base_ref == 'master' }}
        # base_ref for pull request check, ref for push
        uses: LizardByte/.github/actions/verify_changelog@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      next_version: ${{ steps.verify_changelog.outputs.changelog_parser_version }}
      last_version: ${{ steps.verify_changelog.outputs.latest_release_tag_name }}
      release_body: ${{ steps.verify_changelog.outputs.changelog_parser_description }}

  version_check:
    runs-on: ubuntu-latest
    needs: check_changelog

    steps:
      - name: Checkout
        if: ${{ github.ref == 'refs/heads/master' || github.base_ref == 'master' }}
        uses: actions/checkout@v4

      - name: Install Python
        if: ${{ github.ref == 'refs/heads/master' || github.base_ref == 'master' }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Set up Python Dependencies
        if: ${{ github.ref == 'refs/heads/master' || github.base_ref == 'master' }}
        run: |
          echo "Installing RetroArcher Requirements"
          python -m pip install --upgrade pip setuptools
          python -m pip install -r requirements.txt --no-warn-script-location

      - name: Get version
        if: ${{ github.ref == 'refs/heads/master' || github.base_ref == 'master' }}
        run: |
          OUTPUT=$(python ./retroarcher.py --version)
          echo "pyra_version=${OUTPUT}" >> $GITHUB_ENV

      - name: Compare versions
        if: ( env.pyra_version != needs.check_changelog.outputs.next_version ) && ( github.ref == 'refs/heads/master' || github.base_ref == 'master' )  # yamllint disable-line rule:line-length
        run: |
          echo "Version number in pyra/version.py does not match version in CHANGELOG.md"
          exit 1

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-20.04, macos-11]
        architecture: [x64]
        include:  # additional runs
          - os: windows-2019
            architecture: x86

    runs-on: ${{ matrix.os }}
    needs: [check_changelog, version_check]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: ${{ matrix.architecture }}

      - name: Set up Python Dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install -r requirements-dev.txt --no-warn-script-location

      - name: Compile Locale Translations
        run: |
          python ./scripts/_locale.py --compile

      - name: Install npm packages
        shell: bash
        run: |
          # install node_modules
          npm install

          # move node_modules directory to web directory
          mv -f ./node_modules/ ./web/

      - name: Compile Docs
        working-directory: docs
        run: |
          make html

      - name: Build pyinstaller package
        run: |
          python ./scripts/build.py

      - name: Upload Artifacts
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
        uses: actions/upload-artifact@v3  # https://github.com/actions/upload-artifact
        with:
          name: RetroArcher_${{ runner.os }}_${{ matrix.architecture }}
          if-no-files-found: error  # 'warn' or 'ignore' are also available, defaults to `warn`
          path: |
            ${{ github.workspace }}/dist

      - name: Package Release
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: |
          7z a "./RetroArcher_${{ runner.os }}_${{ matrix.architecture }}.zip" "dist"

      - name: Create/Update GitHub Release
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: ncipollo/release-action@v1  # https://github.com/ncipollo/release-action
        with:
          name: ${{ needs.check_changelog.outputs.next_version }}
          tag: ${{ needs.check_changelog.outputs.next_version }}
          artifacts: "*.zip"
          token: ${{ secrets.GH_PAT }}
          allowUpdates: true
          body: ${{ needs.check_changelog.outputs.release_body }}
          discussionCategory: Announcements
